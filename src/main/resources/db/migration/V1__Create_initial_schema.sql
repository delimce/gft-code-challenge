-- Initial database schema for Prices Service
-- This creates the basic table structure for price management

-- Create BRANDS table
CREATE TABLE IF NOT EXISTS BRANDS (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create PRODUCTS table  
CREATE TABLE IF NOT EXISTS PRODUCTS (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(1000),
    BRAND_ID BIGINT,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (BRAND_ID) REFERENCES BRANDS(ID)
);

-- Create PRICES table
CREATE TABLE IF NOT EXISTS PRICES (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    BRAND_ID BIGINT NOT NULL,
    PRODUCT_ID BIGINT NOT NULL,
    PRICE_LIST INTEGER NOT NULL,
    START_DATE TIMESTAMP NOT NULL,
    END_DATE TIMESTAMP NOT NULL,
    PRIORITY INTEGER NOT NULL DEFAULT 0,
    PRICE DECIMAL(10,2) NOT NULL,
    CURR VARCHAR(3) NOT NULL DEFAULT 'EUR',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (BRAND_ID) REFERENCES BRANDS(ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS IDX_PRICES_BRAND_PRODUCT_DATE ON PRICES (BRAND_ID, PRODUCT_ID, START_DATE, END_DATE);
CREATE INDEX IF NOT EXISTS IDX_PRICES_DATE_PRIORITY ON PRICES (START_DATE, END_DATE, PRIORITY);

-- Insert sample data
INSERT INTO BRANDS (ID, NAME) VALUES 
(1, 'ZARA');

INSERT INTO PRODUCTS (ID, NAME, BRAND_ID) VALUES 
(35455, 'First Product', 1);

-- Sample price data for testing
INSERT INTO PRICES (BRAND_ID, PRODUCT_ID, PRICE_LIST, START_DATE, END_DATE, PRIORITY, PRICE, CURR) VALUES
(1, 35455, 1, '2020-06-14 00:00:00', '2020-12-31 23:59:59', 0, 35.50, 'EUR'),
(1, 35455, 2, '2020-06-14 15:00:00', '2020-06-14 18:30:00', 1, 25.45, 'EUR'),
(1, 35455, 3, '2020-06-15 00:00:00', '2020-06-15 11:00:00', 1, 30.50, 'EUR'),
(1, 35455, 4, '2020-06-15 16:00:00', '2020-12-31 23:59:59', 1, 38.95, 'EUR');
